var __getOwnPropNames = Object.getOwnPropertyNames;
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// node_modules/route-parser/lib/route/nodes.js
var require_nodes = __commonJS({
  "node_modules/route-parser/lib/route/nodes.js"(exports, module) {
    "use strict";
    function createNode(displayName) {
      return function(props, children) {
        return {
          displayName,
          props,
          children: children || []
        };
      };
    }
    module.exports = {
      Root: createNode("Root"),
      Concat: createNode("Concat"),
      Literal: createNode("Literal"),
      Splat: createNode("Splat"),
      Param: createNode("Param"),
      Optional: createNode("Optional")
    };
  }
});

// node_modules/route-parser/lib/route/visitors/create_visitor.js
var require_create_visitor = __commonJS({
  "node_modules/route-parser/lib/route/visitors/create_visitor.js"(exports, module) {
    "use strict";
    var nodeTypes = Object.keys(require_nodes());
    function createVisitor(handlers) {
      nodeTypes.forEach(function(nodeType) {
        if (typeof handlers[nodeType] === "undefined") {
          throw new Error("No handler defined for " + nodeType.displayName);
        }
      });
      return {
        visit: function(node, context) {
          return this.handlers[node.displayName].call(this, node, context);
        },
        handlers
      };
    }
    module.exports = createVisitor;
  }
});

// node_modules/route-parser/lib/route/visitors/regexp.js
var require_regexp = __commonJS({
  "node_modules/route-parser/lib/route/visitors/regexp.js"(exports, module) {
    "use strict";
    var createVisitor = require_create_visitor();
    var escapeRegExp = /[\-{}\[\]+?.,\\\^$|#\s]/g;
    function Matcher(options) {
      this.captures = options.captures;
      this.re = options.re;
    }
    Matcher.prototype.match = function(path) {
      var match = this.re.exec(path), matchParams = {};
      if (!match) {
        return;
      }
      this.captures.forEach(function(capture, i) {
        if (typeof match[i + 1] === "undefined") {
          matchParams[capture] = void 0;
        } else {
          matchParams[capture] = decodeURIComponent(match[i + 1]);
        }
      });
      return matchParams;
    };
    var RegexpVisitor = createVisitor({
      "Concat": function(node) {
        return node.children.reduce(function(memo, child) {
          var childResult = this.visit(child);
          return {
            re: memo.re + childResult.re,
            captures: memo.captures.concat(childResult.captures)
          };
        }.bind(this), { re: "", captures: [] });
      },
      "Literal": function(node) {
        return {
          re: node.props.value.replace(escapeRegExp, "\\$&"),
          captures: []
        };
      },
      "Splat": function(node) {
        return {
          re: "([^?]*?)",
          captures: [node.props.name]
        };
      },
      "Param": function(node) {
        return {
          re: "([^\\/\\?]+)",
          captures: [node.props.name]
        };
      },
      "Optional": function(node) {
        var child = this.visit(node.children[0]);
        return {
          re: "(?:" + child.re + ")?",
          captures: child.captures
        };
      },
      "Root": function(node) {
        var childResult = this.visit(node.children[0]);
        return new Matcher({
          re: new RegExp("^" + childResult.re + "(?=\\?|$)"),
          captures: childResult.captures
        });
      }
    });
    module.exports = RegexpVisitor;
  }
});

export {
  __require,
  __commonJS,
  require_nodes,
  require_create_visitor,
  require_regexp
};
//# sourceMappingURL=chunk-EKPW545V.js.map
