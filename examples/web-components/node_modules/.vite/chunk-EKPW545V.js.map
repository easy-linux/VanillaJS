{
  "version": 3,
  "sources": ["../route-parser/lib/route/nodes.js", "../route-parser/lib/route/visitors/create_visitor.js", "../route-parser/lib/route/visitors/regexp.js"],
  "sourcesContent": ["'use strict';\n/** @module route/nodes */\n\n\n/**\n * Create a node for use with the parser, giving it a constructor that takes\n * props, children, and returns an object with props, children, and a\n * displayName.\n * @param  {String} displayName The display name for the node\n * @return {{displayName: string, props: Object, children: Array}}\n */\nfunction createNode(displayName) {\n  return function(props, children) {\n    return {\n      displayName: displayName,\n      props: props,\n      children: children || []\n    };\n  };\n}\n\nmodule.exports = {\n  Root: createNode('Root'),\n  Concat: createNode('Concat'),\n  Literal: createNode('Literal'),\n  Splat: createNode('Splat'),\n  Param: createNode('Param'),\n  Optional: createNode('Optional')\n};\n", "'use strict';\n/**\n * @module route/visitors/create_visitor\n */\n\nvar nodeTypes = Object.keys(require('../nodes'));\n\n/**\n * Helper for creating visitors. Take an object of node name to handler\n * mappings, returns an object with a \"visit\" method that can be called\n * @param  {Object.<string,function(node,context)>} handlers A mapping of node\n * type to visitor functions\n * @return {{visit: function(node,context)}}  A visitor object with a \"visit\"\n * method that can be called on a node with a context\n */\nfunction createVisitor(handlers) {\n  nodeTypes.forEach(function(nodeType) {\n    if( typeof handlers[nodeType] === 'undefined') {\n      throw new Error('No handler defined for ' + nodeType.displayName);\n    }\n\n  });\n\n  return {\n    /**\n     * Call the given handler for this node type\n     * @param  {Object} node    the AST node\n     * @param  {Object} context context to pass through to handlers\n     * @return {Object}\n     */\n    visit: function(node, context) {\n      return this.handlers[node.displayName].call(this,node, context);\n    },\n    handlers: handlers\n  };\n}\n\nmodule.exports = createVisitor;", "'use strict';\n\nvar createVisitor  = require('./create_visitor'),\n    escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n/**\n * @class\n * @private\n */\nfunction Matcher(options) {\n  this.captures = options.captures;\n  this.re = options.re;\n}\n\n/**\n * Try matching a path against the generated regular expression\n * @param  {String} path The path to try to match\n * @return {Object|false}      matched parameters or false\n */\nMatcher.prototype.match = function (path) {\n  var match = this.re.exec(path),\n      matchParams = {};\n\n  if( !match ) {\n    return;\n  }\n\n  this.captures.forEach( function(capture, i) {\n    if( typeof match[i+1] === 'undefined' ) {\n      matchParams[capture] = undefined;\n    }\n    else {\n      matchParams[capture] = decodeURIComponent(match[i+1]);\n    }\n  });\n\n  return matchParams;\n};\n\n/**\n * Visitor for the AST to create a regular expression matcher\n * @class RegexpVisitor\n * @borrows Visitor-visit\n */\nvar RegexpVisitor = createVisitor({\n  'Concat': function(node) {\n    return node.children\n      .reduce(\n        function(memo, child) {\n          var childResult = this.visit(child);\n          return {\n            re: memo.re + childResult.re,\n            captures: memo.captures.concat(childResult.captures)\n          };\n        }.bind(this),\n        {re: '', captures: []}\n      );\n  },\n  'Literal': function(node) {\n    return {\n      re: node.props.value.replace(escapeRegExp, '\\\\$&'),\n      captures: []\n    };\n  },\n\n  'Splat': function(node) {\n    return {\n      re: '([^?]*?)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Param': function(node) {\n    return {\n      re: '([^\\\\/\\\\?]+)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Optional': function(node) {\n    var child = this.visit(node.children[0]);\n    return {\n      re: '(?:' + child.re + ')?',\n      captures: child.captures\n    };\n  },\n\n  'Root': function(node) {\n    var childResult = this.visit(node.children[0]);\n    return new Matcher({\n      re: new RegExp('^' + childResult.re + '(?=\\\\?|$)' ),\n      captures: childResult.captures\n    });\n  }\n});\n\nmodule.exports = RegexpVisitor;"],
  "mappings": "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",
  "names": []
}
